<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>gajim</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>1.9.4</version>
    <packageSourceUrl>https://github.com/elpatron68/my-chocolatey-packages</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>elpatron</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>gajim (Install)</title>
    <authors>Denis Fomin,Yann Leboulanger</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://gajim.org/</projectUrl>
    <iconUrl>https://gajim.org/img/gajim-logo.png</iconUrl>
    <copyright>Copyright © 2003-2023 Gajim Team</copyright>
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>https://www.gnu.org/licenses/gpl-3.0.html</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://dev.gajim.org/gajim/gajim</projectSourceUrl>
    <docsUrl>https://dev.gajim.org/gajim/gajim/wikis/home?lang=en</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <bugTrackerUrl>https://dev.gajim.org/gajim/gajim/issues</bugTrackerUrl>
    <tags>gajim XMPP messenger OMEMO PGP OpenPGP</tags>
    <summary>>Full featured and easy to use Jabber/XMPP client</summary>
    <description>
Gajim aims to be an easy to use and fully-featured XMPP client. It is open source and released under the GNU General Public License (GPL). 

FEATURES:
Never miss a message, keep all your chat clients synchronized
Invite friends to group chats or join one
Simply send pictures, videos or other files to friends and groups
Chat securely with End-to-End encryption via OMEMO or PGP.
Use your favorite emoticons, set your own avatar
Keep and manage all your chat history
Organize your chats with tabs
Automatic spell-checking for your messages
Connect to other Messengers via Transports (Facebook, IRC, ...)
Lookup things on Wikipedia, dictionaries or other search engines directly from the chat window
What are you doing just now? Which music are you listing to this moment? How are you feeling lately? If you like, show your friends by setting your activity, tune, and mood
Even more features via plugins, for example: Image Previews, Location Previews, Anti Spam, ...

ADVANCED FEATURES:
Support for multiple accounts
One of your friends has accounts everywhere but you just want one contact you can easily write to? Group multiple contacts to one Meta-Contact
XML console to see what's happening on the protocol layer
Serverless messaging (Bonjour/Zeroconf), BOSH
Support for Service discovery including nodes and search for users
DBus capabilities

LANGUAGES:
Gajim is available in 29 languages: Basque, Belarusian, Brasilian, British, Bulgarian, Chinese (simplified), Croatian, Czech, Danish, English, Esperanto, French, Galician, German, Hebrew, Hungarian, Italian, Japanese, Kazakh, Lithuanian, Norwegian (Bokmål), Polish, Russian, Serbian, Slovak, Spanish, Swedish, Turkish, and Ukrainian
    </description>
    <releaseNotes>
Gajim 1.1.0 (06 November 2018)

  New

  * Remove support for XEP-0091

  Bug fixes

  * 8968 Windows: Gajim loads DLLs from wrong location
  * 9322 Error when adding contact
  * 9357 Acquire sleep inhibtor correctly after sleep
  * 9385 Ignore invalid bookmarks
  * 9386 Discovery: Browsing nodes without identity
  * 9393 Error when parsing invalid timestamps
  * 9398 Error on jingle file transfer

    </releaseNotes>
    <!-- =============================== -->      

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>-->
    <!-- chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension
         - You want to use Get-UninstallRegistryKey on less than 0.9.10 (in chocolateyUninstall.ps1)
         - You want to use Get-PackageParameters and on less than 0.11.0
         - You want to take advantage of other functions in the core community maintainer's team extension package
    -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
